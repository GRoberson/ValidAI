@startuml ValidAI Enhanced - Arquitetura Interna

!theme cerulean-outline
title ValidAI Enhanced - Fluxo Interno Detalhado

package "Interface Layer" {
    [üåê Gradio Interface] as Interface
    [üì± Frontend Components] as Frontend
}

package "Business Logic Layer" {
    [ü§ñ Chat Multimodal] as ChatLogic
    [üîç Pre Validator] as PreValidator  
    [üß† RAG System] as RAGSystem
    [üìä Validator Service] as ValidatorService
}

package "Processing Layer" {
    [üìÅ File Processor] as FileProcessor
    [üîí Security Validator] as SecurityValidator
    [üóÑÔ∏è Cache Manager] as CacheManager
    [‚öôÔ∏è Config Loader] as ConfigLoader
}

package "Data Layer" {
    [üìÑ DataManager] as DataManager
    [üìã Prompts] as Prompts
    [üí¨ Messenger] as Messenger
}

package "External Services" {
    [üîÆ Google Gemini API] as GeminiAPI
    [‚òÅÔ∏è Google Cloud Storage] as CloudStorage
    [üîç Google Search API] as SearchAPI
}

package "Storage & Config" {
    [‚öôÔ∏è validai_config.json] as Config
    [üìÅ temp_files/] as TempFiles
    [üìö base_conhecimento/] as KnowledgeBase
    [üìú logs/] as Logs
}

' Principais fluxos de dados
Interface -> ChatLogic : user_message + files
ChatLogic -> SecurityValidator : validate_files()
SecurityValidator -> FileProcessor : process_validated_files()
FileProcessor -> DataManager : convert_to_format()

ChatLogic -> CacheManager : check_cache()
CacheManager -> ChatLogic : cache_result

ChatLogic -> Messenger : send_to_gemini()
Messenger -> GeminiAPI : API_request
GeminiAPI -> Messenger : streaming_response
Messenger -> ChatLogic : formatted_response

ChatLogic -> CacheManager : store_response()

' RAG Flow
RAGSystem -> KnowledgeBase : load_documents()
RAGSystem -> CloudStorage : retrieve_context()
RAGSystem -> Messenger : enhanced_query()

' Pre-validation flow  
PreValidator -> ValidatorService : validate_document()
PreValidator -> ValidatorService : validate_code()
PreValidator -> ValidatorService : validate_consistency()

' Configuration flow
ConfigLoader -> Config : load_json()
ConfigLoader -> ConfigLoader : apply_env_vars()
ConfigLoader -> CacheManager : provide_config()

' Security flow
SecurityValidator -> SecurityValidator : path_traversal_check()
SecurityValidator -> SecurityValidator : file_type_validation()
SecurityValidator -> SecurityValidator : malware_detection()

' Logging flow
ChatLogic -> Logs : structured_logging()
SecurityValidator -> Logs : security_events()
CacheManager -> Logs : performance_metrics()

note top of Interface
  **Tr√™s abas principais:**
  ‚Ä¢ ValidAI (Chat Multimodal)
  ‚Ä¢ Pr√©-Validador (An√°lise de Documentos/C√≥digo)  
  ‚Ä¢ RAG (Retrieval Augmented Generation)
end note

note top of SecurityValidator
  **Valida√ß√µes de seguran√ßa:**
  ‚Ä¢ Path traversal prevention
  ‚Ä¢ File type verification
  ‚Ä¢ Size limits
  ‚Ä¢ Malicious signature detection
end note

note top of CacheManager
  **Cache inteligente:**
  ‚Ä¢ TTL autom√°tico (30min)
  ‚Ä¢ LRU eviction
  ‚Ä¢ Limpeza peri√≥dica
  ‚Ä¢ Thread-safe operations
end note

note top of RAGSystem
  **Bases de conhecimento:**
  ‚Ä¢ Conte√∫dos de INs
  ‚Ä¢ Valida√ß√µes Risco Mercado
  ‚Ä¢ Valida√ß√µes Risco Cr√©dito
  ‚Ä¢ Google Search integration
end note

@enduml